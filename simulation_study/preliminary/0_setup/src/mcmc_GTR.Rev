################################################################################
#
# RevBayes Example: Bayesian inference of phylogeny using a GTR+Gamma+Inv
#                   substitution model on a single gene.
#
# authors: Sebastian Hoehna, Michael Landis, and Tracy A. Heath
#
################################################################################


### Read in sequence data for the gene
data = readDiscreteCharacterData("data/full_alignment.nex")

# Get some useful variables from the data. We need these later on.
num_taxa <- data.ntaxa()
num_branches <- 2 * num_taxa - 3
taxa <- data.taxa()


mvi = 1
mni = 1


######################
# Substitution Model #
######################

# specify the stationary frequency parameters
pi_prior <- v(1,1,1,1)
pi ~ dnDirichlet(pi_prior)
moves[mvi++] = mvBetaSimplex(pi, weight=2.0)
moves[mvi++] = mvDirichletSimplex(pi, weight=1.0)


# specify the exchangeability rate parameters
er_prior <- v(1,1,1,1,1,1)
er ~ dnDirichlet(er_prior)
moves[mvi++] = mvBetaSimplex(er, weight=3.0)
moves[mvi++] = mvDirichletSimplex(er, weight=1.5)


# create a deterministic variable for the rate matrix, GTR
Q := fnGTR(er,pi)



##############
# Tree model #
##############

# Prior distribution on the tree topology
topology ~ dnUniformTopology(taxa)
moves[mvi++] = mvNNI(topology, weight=num_taxa/2.0)
moves[mvi++] = mvSPR(topology, weight=num_taxa/10.0)

# Branch length prior
for (i in 1:num_branches) {
    bl[i] ~ dnExponential(10.0)
    moves[mvi++] = mvScale(bl[i])
}

TL := sum(bl)

psi := treeAssembly(topology, bl)




###################
# PhyloCTMC Model #
###################

# the sequence evolution model
seq ~ dnPhyloCTMC(tree=psi, Q=Q, type="DNA")

# attach the data
seq.clamp(data)


############
# Analysis #
############

mymodel = model(psi)

# add monitors
monitors[mni++] = mnScreen(TL, printgen=1000)
monitors[mni++] = mnFile(psi, filename="output/full_alignment_analysis.trees", printgen=10)
monitors[mni++] = mnModel(filename="output/full_alignment_analysis.log", printgen=10)

# run the analysis
mymcmc = mcmc(mymodel, moves, monitors, nruns=1)
mymcmc.burnin(generations=2000,tuningInterval=100)
mymcmc.run(generations=20000)


# summarize output
treetrace = readTreeTrace("output/full_alignment_analysis.trees", treetype="non-clock")
# and then get the MAP tree
map_tree = mapTree(treetrace,"output/full_alignment_analysis.tre")


# you may want to quit RevBayes now
q()
