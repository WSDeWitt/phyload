return("F")
} else {
return("-")
}
} else {
return("-")
}
}
# Extract pairs and recode, write alignment
aln.pair <- matrix(nrow=dim(aln)[1],ncol=dim(pair)[2])
row.names(aln.pair) <- row.names(aln)
for (i in 1:dim(aln.pair)[1]) {
for (j in 1:dim(aln.pair)[2]) {
x <- aln[i,pair[1,j]]
y <- aln[i,pair[2,j]]
aln.pair[i,j] <- convertToDoublet(x,y)
}
}
aln.pair[1:10,1:10]
aln.pair[,1]
aln.pair[,13]
write.phyDat(as.phyDat(aln.pair),"empirical_analysis/data/loop.nex","nexus")
?as.phyDat
"A":"F"
doublet.chars <- c(as.character(0:9),"A","B","C","D","E","F")
write.phyDat(as.phyDat(aln.pair,type="USER",levels=doublet.chars),"empirical_analysis/data/loop.nex","nexus")
?phydat
?phangorn
vignette(package="phangorn")
vignett("phangorn-specials")
vignette("phangorn-specials")
phyDat(aln.pair,type="USER",levels=doublet.chars)
phyDat(aln.pair,type="USER",levels=doublet.chars,ambiguity="-")
write.phyDat(phyDat(aln.pair,type="USER",levels=doublet.chars,ambiguity="-"),"empirical_analysis/data/loop.nex","nexus")
write.phyDat(phyDat(aln.pair,type="USER",levels=doublet.chars,ambiguity="-"),"empirical_analysis/data/pair.nex","nexus")
write.phyDat(as.phyDat(aln.loop),"empirical_analysis/data/loop.nex","nexus")
?write.phyDat
write.phyDat(phyDat(aln.pair,type="USER",levels=doublet.chars,ambiguity="-"),"empirical_analysis/data/pair.nex","nexus",nbcol=-1)
aln.pair <- scan("empirical_analysis/data/pair.nex",what=character(),sep="\n",strip.white=FALSE)
aln.pair <- gsub("PROTEIN","Standard")
aln.pair <- gsub("PROTEIN","Standard",aln.pair)
cat(aln.pair,file="empirical_analysis/data/pair.nex")
aln.pair <- matrix(nrow=dim(aln)[1],ncol=dim(pair)[2])
row.names(aln.pair) <- row.names(aln)
for (i in 1:dim(aln.pair)[1]) {
for (j in 1:dim(aln.pair)[2]) {
x <- aln[i,pair[1,j]]
y <- aln[i,pair[2,j]]
aln.pair[i,j] <- convertToDoublet(x,y)
}
}
write.phyDat(phyDat(aln.pair,type="USER",levels=doublet.chars,ambiguity="-"),"empirical_analysis/data/pair.nex","nexus")
# Correct the datatype
aln.pair <- scan("empirical_analysis/data/pair.nex",what=character(),sep="\n",strip.white=FALSE)
aln.pair <- gsub("PROTEIN","Standard",aln.pair)
cat(aln.pair,sep="\n",file="empirical_analysis/data/pair.nex")
doublet.chars
cat(doublet.chars,sep="\",\"")
cat(doublet.chars,sep=" ")
aln.pair <- matrix(nrow=dim(aln)[1],ncol=dim(pair)[2])
row.names(aln.pair) <- row.names(aln)
for (i in 1:dim(aln.pair)[1]) {
for (j in 1:dim(aln.pair)[2]) {
x <- aln[i,pair[1,j]]
y <- aln[i,pair[2,j]]
aln.pair[i,j] <- convertToDoublet(x,y)
}
}
write.phyDat(phyDat(aln.pair,type="USER",levels=doublet.chars,ambiguity="-"),"empirical_analysis/data/pair.nex","nexus")
# Correct the datatype
aln.pair <- scan("empirical_analysis/data/pair.nex",what=character(),sep="\n",strip.white=FALSE)
aln.pair <- gsub("PROTEIN","Standard",aln.pair)
aln.pair <- gsub("INTERLEAVE=YES","INTERLEAVE=YES SYMBOLS= 0 1 2 3 4 5 6 7 8 9 A B C D E F")
cat(aln.pair,sep="\n",file="empirical_analysis/data/pair.nex")
aln.pair <- matrix(nrow=dim(aln)[1],ncol=dim(pair)[2])
row.names(aln.pair) <- row.names(aln)
for (i in 1:dim(aln.pair)[1]) {
for (j in 1:dim(aln.pair)[2]) {
x <- aln[i,pair[1,j]]
y <- aln[i,pair[2,j]]
aln.pair[i,j] <- convertToDoublet(x,y)
}
}
write.phyDat(phyDat(aln.pair,type="USER",levels=doublet.chars,ambiguity="-"),"empirical_analysis/data/pair.nex","nexus")
# Correct the datatype
aln.pair <- scan("empirical_analysis/data/pair.nex",what=character(),sep="\n",strip.white=FALSE)
aln.pair <- gsub("PROTEIN","Standard",aln.pair)
aln.pair <- gsub("INTERLEAVE=YES","INTERLEAVE=YES SYMBOLS= 0 1 2 3 4 5 6 7 8 9 A B C D E F",aln.pair)
cat(aln.pair,sep="\n",file="empirical_analysis/data/pair.nex")
aln.pair <- matrix(nrow=dim(aln)[1],ncol=dim(pair)[2])
row.names(aln.pair) <- row.names(aln)
for (i in 1:dim(aln.pair)[1]) {
for (j in 1:dim(aln.pair)[2]) {
x <- aln[i,pair[1,j]]
y <- aln[i,pair[2,j]]
aln.pair[i,j] <- convertToDoublet(x,y)
}
}
write.phyDat(phyDat(aln.pair,type="USER",levels=doublet.chars,ambiguity="-"),"empirical_analysis/data/pair.nex","nexus")
# Correct the datatype
aln.pair <- scan("empirical_analysis/data/pair.nex",what=character(),sep="\n",strip.white=FALSE)
aln.pair <- gsub("PROTEIN","Standard",aln.pair)
aln.pair <- gsub("INTERLEAVE=YES","INTERLEAVE=YES SYMBOLS= 0 1 2 3 4 5 6 7 8 9 A B C D E F",aln.pair)
cat(aln.pair,sep="\n",file="empirical_analysis/data/pair.nex")
cat(doublet.chars,sep="")
aln.pair <- matrix(nrow=dim(aln)[1],ncol=dim(pair)[2])
row.names(aln.pair) <- row.names(aln)
for (i in 1:dim(aln.pair)[1]) {
for (j in 1:dim(aln.pair)[2]) {
x <- aln[i,pair[1,j]]
y <- aln[i,pair[2,j]]
aln.pair[i,j] <- convertToDoublet(x,y)
}
}
write.phyDat(phyDat(aln.pair,type="USER",levels=doublet.chars,ambiguity="-"),"empirical_analysis/data/pair.nex","nexus")
# Correct the datatype
aln.pair <- scan("empirical_analysis/data/pair.nex",what=character(),sep="\n",strip.white=FALSE)
aln.pair <- gsub("PROTEIN","Standard",aln.pair)
aln.pair <- gsub("INTERLEAVE=YES","INTERLEAVE=YES SYMBOLS=\"0123456789ABCDEF\"",aln.pair)
cat(aln.pair,sep="\n",file="empirical_analysis/data/pair.nex")
70/(3*60+38)
3/14
160/(15*60+53)
(15*60+53)/160
(15*60+53)/160 * 1000 / 60/60
set.seed(1234)
library(TreePar)
set.seed(1234)
phy <- sim.bd.age(1,1,2,0.5)[[1]]
plot(phy)
set.seed(1234)
phy <- sim.bd.age(1,1,2,0.25,)[[1]]
plot(phy)
phy
sim.bd.age(1,1,2,0.25)[[1]]
sim.bd.age(1,1,2,0.25)[[1]]
sim.bd.age(1,1,2,0.25)[[1]]
sim.bd.age(1,1,2,0.25)[[1]]
?sim.bd.age
set.seed(1234)
phy <- sim.bd.age(10,1,1,0.1)[[1]]
phy
set.seed(1234)
phy <- sim.bd.age(5,1,1,0.1)[[1]]
phy
plot(phy)
set.seed(1234)
phy <- sim.bd.age(5,1,1,0.2)[[1]]
phy
set.seed(8472)
phy <- sim.bd.age(5,1,1,0.2)[[1]]
phy
set.seed(8472)
phy <- sim.bd.age(5,1,2,0.25)[[1]]
set.seed(8472)
phy <- sim.bd.age(5,1,1.5,0.25)[[1]]
phy
set.seed(8472)
set.seed(666)
phy <- sim.bd.age(5,1,1.5,0.25)[[1]]
phy
set.seed(666)
phy <- sim.bd.taxa(10,1,1,0.5,10/12)[[1]]
phy
plot(phy)
set.seed(8472)
phy <- sim.bd.taxa(10,1,1,0.5,10)[[1]]
set.seed(666)
phy <- sim.bd.taxa(10,1,1,0.5,10)[[1]]
set.seed(666)
phy <- sim.bd.taxa(10,1,1,0.5,10)[[1]]
set.seed(666)
phy <- sim.bd.taxa(10,1,1,0.5,10/12)[[1]]
phy
plot(phy)
plot(phy,show.tip.label=FALSE)
set.seed(666)
phy <- sim.bd.taxa(5,1,1,0.5,10/12)[[1]]
phy
plot(phy,show.tip.label=FALSE)
plot(phy,show.tip.label=T)
?ape
?tiplabels
tiplabels(text=NULL,pch=16,frame="circle")
plot(phy,show.tip.label=FALSE)
tiplabels(text=NULL,pch=16,frame="circle")
tiplabels(text=NULL,frame="circle")
tiplabels(text=NULL,pch=16,frame="circle")
plot(phy,show.tip.label=FALSE)
tiplabels(text=NULL,pch=16,frame="circle")
tiplabels
abline(v=4,col="red")
abline(h=4,col="red")
abline(v=0)
abline(v=2)
abline(v=1)
abline(v=0.5)
plot(phy,show.tip.label=FALSE)
tiplabels(text=NULL,pch=16,frame="circle")
points(x=c(0.5,1),y=c(4,5.5))
points(x=c(0.5,1),y=c(4,5.5),pch=16)
tiplabels(text=NULL,pch=16,frame="circle",cex=1)
points(x=c(0.5,1),y=c(4,5.5),pch=16)
points(x=c(0.5,1),y=c(4,5.5),pch=16,cex=0.8)
plot(phy,show.tip.label=FALSE)
tiplabels(text=NULL,pch=16,frame="circle",cex=1)
points(x=c(0.5,1),y=c(4,5.5),pch=16,cex=0.8)
points(x=c(0.5,1),y=c(4,5.5),pch=16,cex=0.9)
points(x=c(0.5,1),y=c(4,5.5),pch=16,cex=1)
plot(phy,show.tip.label=FALSE,edge.width=2)
tiplabels(text=NULL,pch=16,frame="circle",cex=1)
points(x=c(0.5,1),y=c(4,5.5),pch=16,cex=1)
abline(v=c(0.5,1),lty=2,col="#66666690",lwd=2)
library(latex2exp)
mtext(text=c("$t_{ss}^{sa}$","$t_{ss}$"),side=1,at=c(0.5,1))
plot(phy,show.tip.label=FALSE,edge.width=2)
tiplabels(text=NULL,pch=16,frame="circle",cex=1)
points(x=c(0.5,1),y=c(4,5.5),pch=16,cex=1)
abline(v=c(0.5,1),lty=2,col="#66666690",lwd=2)
mtext(text=c(TeX("$t_{ss}^{sa}$"),TeX("$t_{ss}$")),side=1,at=c(0.5,1))
?mtext
mtext(text=c(TeX("$t_{ss}^{sa}$"),TeX("$t_{ss}$")),side=1,at=c(0.5,1),line=0.5)
plot(phy,show.tip.label=FALSE,edge.width=2)
tiplabels(text=NULL,pch=16,frame="circle",cex=1)
points(x=c(0.5,1),y=c(4,5.5),pch=16,cex=1)
abline(v=c(0.5,1),lty=2,col="#66666690",lwd=2)
mtext(text=c(TeX("$t_{ss}^{sa}$"),TeX("$t_{ss}$")),side=1,at=c(0.5,1),line=0.5)
plot(phy,show.tip.label=FALSE,edge.width=2)
tiplabels(text=NULL,pch=16,frame="circle",cex=1)
points(x=c(0.5,1),y=c(4,5.5),pch=16,cex=1)
abline(v=c(0.5,1),lty=2,col="#66666690",lwd=2)
mtext(text=c(TeX("$t_{ss}^{sa}$")),side=1,at=c(0.5,1),line=0.5)
sampled.tip.times <- getx(phy,TRUE)
sampled.tip.times
sampled.tip.times <- sampled.tip.times[sampled.tip.times[,2] == 0 & sampled.tip.times[,1] > 1e-8,1]
sampled.tip.times
abline(v=,lty=2,col="#66666690",lwd=2)
plot(phy,show.tip.label=FALSE,edge.width=2)
tiplabels(text=NULL,pch=16,frame="circle",cex=1)
points(x=c(0.5,1),y=c(4,5.5),pch=16,cex=1)
abline(v=c(0.5,1),lty=2,col="#66666690",lwd=2)
mtext(text=c(TeX("$t_{ss}^{1}$"),TeX("$t_{ss}^{2}$")),side=1,at=c(0.5,1),line=0.5)
sampled.tip.times
# Adjust such that the two nearly equal serial tip ages are equal
t.adj <- 2.127208e-01 - 2.137463e-01
phy$edge.length[phy$edge[,2] == 8]
phy <- sim.bd.taxa(5,1,1,0.5,10/12)[[1]]
phy
library(TreePar)
library(latex2exp)
set.seed(666)
phy <- sim.bd.taxa(5,1,1,0.5,10/12)[[1]]
phy
# Adjust such that the two nearly equal serial tip ages are equal
t.adj <- 2.127208e-01 - 2.137463e-01
phy$edge.length[phy$edge[,2] == 8] <- phy$edge.length[phy$edge[,2] == 8] + t.adj
# Plotting
plot(phy,show.tip.label=FALSE,edge.width=2)
tiplabels(text=NULL,pch=16,frame="circle",cex=1)
points(x=c(0.5,1),y=c(4,5.5),pch=16,cex=1)
abline(v=c(0.5,1),lty=2,col="#66666690",lwd=2)
mtext(text=c(TeX("$t_{ss}^{2}$"),TeX("$t_{ss}^{1}$")),side=1,at=c(0.5,1),line=0.5)
sampled.tip.times <- getx(phy,TRUE)
sampled.tip.times <- sampled.tip.times[sampled.tip.times[,2] == 0 & sampled.tip.times[,1] > 1e-8,1]
sampled.tip.times
t.adj
set.seed(666)
phy <- sim.bd.taxa(5,1,1,0.5,10/12)[[1]]
phy
# Adjust such that the two nearly equal serial tip ages are equal
t.adj <- 2.127208e-01 - 2.137463e-01
phy$edge.length[phy$edge[,2] == 8] <- phy$edge.length[phy$edge[,2] == 8] - t.adj
# Plotting
plot(phy,show.tip.label=FALSE,edge.width=2)
tiplabels(text=NULL,pch=16,frame="circle",cex=1)
points(x=c(0.5,1),y=c(4,5.5),pch=16,cex=1)
abline(v=c(0.5,1),lty=2,col="#66666690",lwd=2)
mtext(text=c(TeX("$t_{ss}^{2}$"),TeX("$t_{ss}^{1}$")),side=1,at=c(0.5,1),line=0.5)
sampled.tip.times <- getx(phy,TRUE)
sampled.tip.times <- sampled.tip.times[sampled.tip.times[,2] == 0 & sampled.tip.times[,1] > 1e-8,1]
sampled.tip.times
sampled.tip.times <- unique(sampled.tip.times)
bt <- getx(phy,TRUE)
bt <- bt[bt[,1] == 1,2]
sampled.tip.time <- max(bt) - 0.9534706
max(bt)
bt <- getx(phy,TRUE)
bt
bt[bt[,1] == 1,2]
bt[bt[,1] == 1,]
bt <- getx(phy,TRUE)
bt <- bt[bt[,1] == 2,1]
bt
bt <- getx(phy,TRUE)
bt <- bt[bt[,1] == 1,1]
bt
bt <- getx(phy,TRUE)
bt[bt[,2] == 1]
bt <- getx(phy,TRUE)
bt
bt[,2] == 1
bt <- bt[bt[,2] == 1,]
bt
bt <- getx(phy,TRUE)
bt <- bt[bt[,2] == 1,1]
bt
sampled.tip.time <- max(bt) - 0.9534706
sampled.tip.time
abline(v=sampled.tip.time,lty=2,col="#66666690",lwd=2)
mtext(text=TeX("$t_{ss}^1$"),side=1,at=c(sampled.tip.time),line=0.5)
# Plotting
plot(phy,show.tip.label=FALSE,edge.width=2)
tiplabels(text=NULL,pch=16,frame="circle",cex=1)
points(x=c(0.5,1),y=c(4,5.5),pch=16,cex=1)
abline(v=c(0.5,1),lty=2,col="#66666690",lwd=2)
mtext(text=c(TeX("$t_{sa}^{2}$"),TeX("$t_{sa}^{1}$")),side=1,at=c(0.5,1),line=0.5)
# Plotting
plot(phy,show.tip.label=FALSE,edge.width=2)
tiplabels(text=NULL,pch=16,frame="circle",cex=1)
points(x=c(0.5,1),y=c(4,5.5),pch=16,cex=1)
abline(v=c(0.5,1),lty=2,col="#66666690",lwd=2)
mtext(text=c(TeX("$t_{sa}^{2}$"),TeX("$t_{sa}^{1}$")),side=1,at=c(0.5,1),line=0.5)
abline(v=sampled.tip.time,lty=2,col="#66666690",lwd=2)
mtext(text=TeX("$t_{ss}^1$"),side=1,at=c(sampled.tip.time),line=0.5)
# Adjust such that the two nearly equal serial tip ages are farther apart
t.adj <- 2.127208e-01 - 2.137463e-01
set.seed(666)
phy <- sim.bd.taxa(5,1,1,0.5,10/12)[[1]]
phy
# Adjust such that the two nearly equal serial tip ages are farther apart
t.adj <- 2.127208e-01 - 2.137463e-01
# Adjust such that the two nearly equal serial tip ages are farther apart
t.adj <- 0.05
phy$edge.length[phy$edge[,2] == 8] <- phy$edge.length[phy$edge[,2] == 8] - t.adj
# Key times
bt <- getx(phy,TRUE)
bt <- bt[bt[,2] == 1,1]
sampled.tip.times <- getx(phy,TRUE)
sampled.tip.times <- sampled.tip.times[sampled.tip.times[,1] == 0 & sampled.tip.times[,2] > 1e-8,2]
sampled.tip.times
sampled.tip.times <- getx(phy,TRUE)
sampled.tip.times[sampled.tip.times[,1] == 0 & sampled.tip.times[,2] > 1e-8,2]
sampled.tip.times[,1] == 0 & sampled.tip.times[,2] > 1e-8
sampled.tip.times[,2]
sampled.tip.times <- sampled.tip.times[sampled.tip.times[,2] == 0 & sampled.tip.times[,1] > 1e-8,2]
sampled.tip.times
sampled.tip.times <- getx(phy,TRUE)
sampled.tip.times
sampled.tip.times[,2] == 0
sampled.tip.times[,2] == 0 & sampled.tip.times[,1] > 1e-8
sampled.tip.times <- sampled.tip.times[sampled.tip.times[,2] == 0 & sampled.tip.times[,1] > 1e-8,1]
sampled.tip.times
sampled.tip.times <- max(bt) - sampled.tip.times
sampled.tip.times
sampled.tip.times <- sort(sampled.tip.times)
mtext(text=c(TeX("$t_{ss}^3$"),TeX("$t_{ss}^2$"),TeX("$t_{ss}^1$")),side=1,at=c(sampled.tip.time),line=0.5)
abline(v=sampled.tip.times,lty=2,col="#66666690",lwd=2)
# Plotting
plot(phy,show.tip.label=FALSE,edge.width=2)
tiplabels(text=NULL,pch=16,frame="circle",cex=1)
points(x=c(0.5,1),y=c(4,5.5),pch=16,cex=1)
abline(v=c(0.5,1),lty=2,col="#66666690",lwd=2)
mtext(text=c(TeX("$t_{sa}^{2}$"),TeX("$t_{sa}^{1}$")),side=1,at=c(0.5,1),line=0.5)
abline(v=sampled.tip.times,lty=2,col="#66666690",lwd=2)
mtext(text=c(TeX("$t_{ss}^3$"),TeX("$t_{ss}^2$"),TeX("$t_{ss}^1$")),side=1,at=c(sampled.tip.time),line=0.5)
# Plotting
plot(phy,show.tip.label=FALSE,edge.width=2)
tiplabels(text=NULL,pch=16,frame="circle",cex=1)
points(x=c(0.5,1),y=c(4,5.5),pch=16,cex=1)
abline(v=c(0.5,1),lty=2,col="#66666690",lwd=2)
mtext(text=c(TeX("$t_{sa}^{2}$"),TeX("$t_{sa}^{1}$")),side=1,at=c(0.5,1),line=0.5)
abline(v=sampled.tip.times,lty=2,col="#66666690",lwd=2)
mtext(text=c(TeX("$t_{ss}^3$"),TeX("$t_{ss}^2$"),TeX("$t_{ss}^1$")),side=1,at=sampled.tip.times,line=0.5)
abline(v=max(bt),lty=2,col="#66666690",lwd=2)
mtext(text=TeX("$t_{se}^1$"),side=1,at=max(bt),line=0.5)
pdf("~/Documents/Award_applications/2019/Germany/research_proposal/bdstp.pdf",width=6,height=4)
par(omi=rep(0,4),mai=c(0.5,0.05,0.05,0.05))
plot(phy,show.tip.label=FALSE,edge.width=2)
tiplabels(text=NULL,pch=16,frame="circle",cex=1)
points(x=c(0.5,1),y=c(4,5.5),pch=16,cex=1)
abline(v=c(0.5,1),lty=2,col="#66666690",lwd=2)
mtext(text=c(TeX("$t_{sa}^{2}$"),TeX("$t_{sa}^{1}$")),side=1,at=c(0.5,1),line=0.5)
abline(v=sampled.tip.times,lty=2,col="#66666690",lwd=2)
mtext(text=c(TeX("$t_{ss}^3$"),TeX("$t_{ss}^2$"),TeX("$t_{ss}^1$")),side=1,at=sampled.tip.times,line=0.5)
abline(v=max(bt),lty=2,col="#66666690",lwd=2)
mtext(text=TeX("$t_{se}^1$"),side=1,at=max(bt),line=0.5)
dev.off()
pdf("~/Documents/Award_applications/2019/Germany/research_proposal/bdstp.pdf",width=4,height=2.5)
par(omi=rep(0,4),mai=c(0.4,0.05,0.05,0.05),lend=2)
plot(phy,show.tip.label=FALSE,edge.width=2)
tiplabels(text=NULL,pch=16,frame="circle",cex=1)
points(x=c(0.5,1),y=c(4,5.5),pch=16,cex=1)
abline(v=c(0.5,1),lty=2,col="#66666690",lwd=2)
mtext(text=c(TeX("$t_{sa}^{2}$"),TeX("$t_{sa}^{1}$")),side=1,at=c(0.5,1),line=0.5)
abline(v=sampled.tip.times,lty=2,col="#66666690",lwd=2)
mtext(text=c(TeX("$t_{ss}^3$"),TeX("$t_{ss}^2$"),TeX("$t_{ss}^1$")),side=1,at=sampled.tip.times,line=0.5)
abline(v=max(bt),lty=2,col="#66666690",lwd=2)
mtext(text=TeX("$t_{se}^1$"),side=1,at=max(bt),line=0.5)
dev.off()
library(TreePar)
library(latex2exp)
set.seed(666)
phy <- sim.bd.taxa(5,1,1,0.5,10/12)[[1]]
phy
# Adjust such that the two nearly equal serial tip ages are farther apart
t.adj <- 0.05
phy$edge.length[phy$edge[,2] == 8] <- phy$edge.length[phy$edge[,2] == 8] - t.adj
# Key times
bt <- getx(phy,TRUE)
bt <- bt[bt[,2] == 1,1]
sampled.tip.times <- getx(phy,TRUE)
sampled.tip.times <- sampled.tip.times[sampled.tip.times[,2] == 0 & sampled.tip.times[,1] > 1e-8,1]
sampled.tip.times <- max(bt) - sampled.tip.times
sampled.tip.times <- sort(sampled.tip.times)
# Plotting
pdf("~/Documents/Award_applications/2019/Germany/research_proposal/bdstp.pdf",width=4,height=2.5)
par(omi=rep(0,4),mai=c(0.4,0.05,0.05,0.05),lend=2)
plot(phy,show.tip.label=FALSE,edge.width=2)
tiplabels(text=NULL,pch=16,frame="circle",cex=1)
points(x=c(0.5,1),y=c(4,5.5),pch=16,cex=1)
abline(v=c(0.5,1),lty=2,col="#666666",lwd=2)
mtext(text=c(TeX("$t_{sa}^{2}$"),TeX("$t_{sa}^{1}$")),side=1,at=c(0.5,1),line=0.5)
abline(v=sampled.tip.times,lty=2,col="#666666",lwd=2)
mtext(text=c(TeX("$t_{ss}^3$"),TeX("$t_{ss}^2$"),TeX("$t_{ss}^1$")),side=1,at=sampled.tip.times,line=0.5)
abline(v=max(bt),lty=2,col="#666666",lwd=2)
mtext(text=TeX("$t_{se}^1$"),side=1,at=max(bt),line=0.5)
dev.off()
library(TreePar)
library(latex2exp)
set.seed(666)
phy <- sim.bd.taxa(5,1,1,0.5,10/12)[[1]]
phy
# Adjust such that the two nearly equal serial tip ages are farther apart
t.adj <- 0.05
phy$edge.length[phy$edge[,2] == 8] <- phy$edge.length[phy$edge[,2] == 8] - t.adj
# Key times
bt <- getx(phy,TRUE)
bt <- bt[bt[,2] == 1,1]
sampled.tip.times <- getx(phy,TRUE)
sampled.tip.times <- sampled.tip.times[sampled.tip.times[,2] == 0 & sampled.tip.times[,1] > 1e-8,1]
sampled.tip.times <- max(bt) - sampled.tip.times
sampled.tip.times <- sort(sampled.tip.times)
# Plotting
pdf("~/Documents/Award_applications/2019/Germany/research_proposal/bdstp.pdf",width=4,height=2.5)
par(omi=rep(0,4),mai=c(0.4,0.05,0.05,0.05),lend=2)
plot(phy,show.tip.label=FALSE,edge.width=2)
tiplabels(text=NULL,pch=16,frame="circle",cex=1)
points(x=c(0.5,1),y=c(4,5.5),pch=16,cex=1)
abline(v=c(0.5,1),lty=2,col="#A9A9A9",lwd=2)
mtext(text=c(TeX("$t_{sa}^{2}$"),TeX("$t_{sa}^{1}$")),side=1,at=c(0.5,1),line=0.5)
abline(v=sampled.tip.times,lty=2,col="#A9A9A9",lwd=2)
mtext(text=c(TeX("$t_{ss}^3$"),TeX("$t_{ss}^2$"),TeX("$t_{ss}^1$")),side=1,at=sampled.tip.times,line=0.5)
abline(v=max(bt),lty=2,col="#A9A9A9",lwd=2)
mtext(text=TeX("$t_{se}^1$"),side=1,at=max(bt),line=0.5)
dev.off()
library(TreePar)
library(latex2exp)
set.seed(666)
phy <- sim.bd.taxa(5,1,1,0.5,10/12)[[1]]
phy
# Adjust such that the two nearly equal serial tip ages are farther apart
t.adj <- 0.05
phy$edge.length[phy$edge[,2] == 8] <- phy$edge.length[phy$edge[,2] == 8] - t.adj
# Key times
bt <- getx(phy,TRUE)
bt <- bt[bt[,2] == 1,1]
sampled.tip.times <- getx(phy,TRUE)
sampled.tip.times <- sampled.tip.times[sampled.tip.times[,2] == 0 & sampled.tip.times[,1] > 1e-8,1]
sampled.tip.times <- max(bt) - sampled.tip.times
sampled.tip.times <- sort(sampled.tip.times)
# Plotting
pdf("~/Documents/Award_applications/2019/Germany/research_proposal/bdstp.pdf",width=4,height=2.5)
par(omi=rep(0,4),mai=c(0.4,0.05,0.05,0.05),lend=2)
plot(phy,show.tip.label=FALSE,edge.width=2)
tiplabels(text=NULL,pch=16,frame="circle",cex=1)
points(x=c(0.5,1),y=c(4,5.5),pch=16,cex=1)
abline(v=c(0.5,1),lty=2,col="#A9A9A9",lwd=2)
mtext(text=c(TeX("$t_{ssa}^{2}$"),TeX("$t_{ssa}^{1}$")),side=1,at=c(0.5,1),line=0.5)
abline(v=sampled.tip.times,lty=2,col="#A9A9A9",lwd=2)
mtext(text=c(TeX("$t_{sst}^3$"),TeX("$t_{sst}^2$"),TeX("$t_{sst}^1$")),side=1,at=sampled.tip.times,line=0.5)
abline(v=max(bt),lty=2,col="#A9A9A9",lwd=2)
mtext(text=TeX("$t_{se}^1$"),side=1,at=max(bt),line=0.5)
dev.off()
library(TreePar)
library(latex2exp)
set.seed(666)
phy <- sim.bd.taxa(5,1,1,0.5,10/12)[[1]]
phy
# Adjust such that the two nearly equal serial tip ages are farther apart
t.adj <- 0.05
phy$edge.length[phy$edge[,2] == 8] <- phy$edge.length[phy$edge[,2] == 8] - t.adj
# Key times
bt <- getx(phy,TRUE)
bt <- bt[bt[,2] == 1,1]
sampled.tip.times <- getx(phy,TRUE)
sampled.tip.times <- sampled.tip.times[sampled.tip.times[,2] == 0 & sampled.tip.times[,1] > 1e-8,1]
sampled.tip.times <- max(bt) - sampled.tip.times
sampled.tip.times <- sort(sampled.tip.times)
# Plotting
pdf("~/Documents/Award_applications/2019/Germany/research_proposal/bdstp.pdf",width=4,height=2.5)
par(omi=rep(0,4),mai=c(0.4,0.05,0.05,0.05),lend=2)
plot(phy,show.tip.label=FALSE,edge.width=2)
tiplabels(text=NULL,pch=16,frame="circle",cex=1)
points(x=c(0.5,1),y=c(4,5.5),pch=16,cex=1)
abline(v=c(0.5,1),lty=2,col="#A9A9A9",lwd=2)
mtext(text=c(TeX("$t_{sa}^{2}$"),TeX("$t_{sa}^{1}$")),side=1,at=c(0.5,1),line=0.5)
abline(v=sampled.tip.times,lty=2,col="#A9A9A9",lwd=2)
mtext(text=c(TeX("$t_{ss}^3$"),TeX("$t_{ss}^2$"),TeX("$t_{ss}^1$")),side=1,at=sampled.tip.times,line=0.5)
abline(v=max(bt),lty=2,col="#A9A9A9",lwd=2)
mtext(text=TeX("$t_{se}^1$"),side=1,at=max(bt),line=0.5)
dev.off()
install.packages("kernlab")
