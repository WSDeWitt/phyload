#! /usr/bin/env python
# -*- coding: utf-8 -*-

"""Simulate alignments with varying degrees of pairwise epistasis
"""

import os
# import sconsutils
from SCons.Script import Environment, AddOption

# sconsutils
# ^ see this dir in gctree for slurm job submission utils

# Set up SCons environment
environ = os.environ.copy()
env = Environment(ENV=environ)

# command line arguments
AddOption('--revpath',
          dest='revpath',
          type='str',
          metavar='<path to RevBayes>',
          help='path to RevBayes (if not in $PATH)',
          default='rb')
revpath = GetOption('revpath')

AddOption('--replicates',
          dest='replicates',
          type='int',
          metavar='<replicates>',
          help='number replicates in each grid cell',
          default=1)
replicates = GetOption('replicates')

output = '_output'
for d in (1,):
    for n_epi in range(10, 110, 10):
        if n_epi % 2 != 0:
            raise ValueError(f'{n_epi} must be even!')
        for n_iid in range(10, 110, 10):
            for replicate in range(1, replicates + 1):
                outbase = f'_output/{d}/{n_iid}/{n_epi}/{replicate}'
                # iid and epistatic alignments
                alns = env.Command([f'{outbase}/iid_aln.nex',
                                    f'{outbase}/epi_aln.nex'],
                                   None,
                                   'Rscript simulation_scripts/mk_alns.R '
                                   f'{n_iid} {n_epi} {d} {replicate} {outbase}'
                                   f' {revpath} &> {outbase}/mk_alns.log')
                # concatentate the iid and epistatic alignments into one
                aln = env.Command(f'{outbase}/aln.nex',
                                  alns,
                                  'Rscript simulation_scripts/merge_alns.R '
                                  '$SOURCES $TARGET '
                                  f' &> {outbase}/merge_alns.log')
            # new_sim = env.Command([],
            #                       new_config,
            #                       f'{rev_path} ')
